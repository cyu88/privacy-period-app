class Period:
    '''
    Represents a menstrual period.

    Attributes:
        start_date (datetime): The start date of the period.
        end_date (datetime): The end date of the period.
        duration (int): The duration of the period in days.
        flow_intensity (str): The intensity of menstrual flow (e.g., "light", "moderate", "heavy").
        symptoms (list): List of symptoms experienced during the period.
        mood (str): Mood during the period.
        energy_level (str): Energy level during the period.
        notes (str): Additional notes or comments about the period.
        ongoing (bool): Indicates if the period is ongoing.
    '''

    def __init__(self, start_date, end_date=None, flow_intensity=None, symptoms=None, mood=None, energy_level=None, notes=None):
        self.start_date = start_date
        self.end_date = end_date
        self.duration = (end_date - start_date).days + 1 if end_date else None
        self.symptoms = symptoms if symptoms is not None else []
        self.notes = notes
        self.ongoing = True if not end_date else False

    def end_period(self, end_date):
        self.end_date = end_date
        self.duration = (end_date - self.start_date).days + 1
        self.ongoing = False

    def is_ongoing(self):
        return self.ongoing

    def get_duration(self):
        return self.duration

    def get_start_date(self):
        return self.start_date

    def get_end_date(self):
        return self.end_date

    def add_symptom(self, symptom):
        self.symptoms.append(symptom)

    def add_notes(self, notes):
        self.notes = notes